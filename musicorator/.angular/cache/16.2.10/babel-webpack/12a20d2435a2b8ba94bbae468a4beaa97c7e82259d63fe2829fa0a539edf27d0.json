{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../data-processor.service\";\nimport * as i2 from \"../helper.service\";\nimport * as i3 from \"../file-data.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"../sortable-searchable-table/sortable-searchable-table.component\";\nimport * as i7 from \"../matrix-json/matrix-json.component\";\nimport * as i8 from \"../tag-audio/tag-audio.component\";\nfunction SuggestionFilterComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"app-matrix-json\", 10);\n    i0.ɵɵlistener(\"selectedItem\", function SuggestionFilterComponent_div_18_Template_app_matrix_json_selectedItem_1_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onJsonMatrixSelection($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matrix\", ctx_r0.suggestionMatrix)(\"isSearch\", true)(\"searchArray\", ctx_r0.searchArray);\n  }\n}\nconst _c0 = function () {\n  return [\"dir\"];\n};\nexport let SuggestionFilterComponent = /*#__PURE__*/(() => {\n  class SuggestionFilterComponent {\n    constructor(assistant, helper, fs) {\n      this.assistant = assistant;\n      this.helper = helper;\n      this.fs = fs;\n      this.filesChange = new EventEmitter();\n      this.matrixChange = new EventEmitter();\n      this.folderChange = new EventEmitter();\n      this.suggestionMatrix = [];\n      this.suggestionObject = [];\n      // resultsMatrix\n      this.matrixTitles = [];\n      this.filteredMatrix = [];\n      this.matrix = [];\n      // folder\n      this.searchValues = [];\n      // filter\n      this.searchArray = [];\n      this.tableSearchArray = [];\n      // current selection\n      this.currentAudioArray = [];\n      // display\n      this.isSearchOn = false;\n      this.isStepsOn = true;\n      this.isMatrixOn = false;\n    }\n    // TODO: on ad custom, let autosort\n    ngOnInit() {}\n    ngOnDestroy() {}\n    onTableSelection(row) {\n      if (row) {\n        if (row.length) {\n          if (row[row.length - 1]) {\n            // this.playSong(file);\n            // const file = row[row.length - 1];\n            this.currentAudioArray = row;\n          }\n        }\n      }\n    }\n    onSavedAudio(audio) {\n      if (audio) {\n        const dir = audio.dir;\n        const tags = audio.tags;\n        this.filteredMatrix.find(res => {\n          if (res) {\n            if (res.length > 0) {\n              const curDir = res[res.length - 1];\n              if (dir === curDir) {\n                this.updateMatrixRow(res, tags);\n              }\n            }\n          }\n        });\n        this.matrix.find(res => {\n          if (res) {\n            if (res.length > 0) {\n              const curDir = res[res.length - 1];\n              if (dir === curDir) {\n                this.updateMatrixRow(res, tags);\n              }\n            }\n          }\n        });\n      }\n    }\n    updateMatrixRow(row, tags) {\n      const keys = Object.keys(this.suggestionObject);\n      const rearranged = this.assistant.getSuggestionValues(tags, this.suggestionObject, keys);\n      for (let i = 6; i < row.length - 1; i++) {\n        row[i] = rearranged[i - 6];\n      }\n    }\n    onTableChange(filteredMatrix) {\n      // this.fs.setFilteredMatrix(filteredMatrix);\n      // const filteredFiles = this.getFilteredFiles(filteredMatrix);\n      // this.fs.setFilteredFiles(filteredFiles);\n      this.setMatrixChange(filteredMatrix);\n      this.setFilesChange(filteredMatrix);\n    }\n    setFilesChange(filteredMatrix) {\n      this.filesChange.emit(this.getFilteredFiles(filteredMatrix));\n    }\n    setMatrixChange(filteredMatrix) {\n      this.matrixChange.emit(filteredMatrix);\n    }\n    setFolderChange(validated) {\n      const folder = this.getFolderName(validated);\n      this.folderChange.emit(folder);\n    }\n    getFilteredFiles(matrix) {\n      const files = [];\n      for (const val of matrix) {\n        const file = val[val.length - 1]; // last item is dir column\n        files.push(file);\n      }\n      return files;\n    }\n    onTableSearch(searchStrings) {\n      this.tableSearchArray = searchStrings;\n      this.setSearchValues();\n    }\n    setSearchValues() {\n      const fullSearch = this.searchArray.concat(this.tableSearchArray);\n      const validated = [];\n      for (const val of fullSearch) {\n        const res = val.search;\n        if (res) {\n          this.helper.tryAddValidatedSimilar(res, validated, false, true, 3);\n        }\n      }\n      // const folder = this.getFolderName(validated);\n      // this.fs.setNewFolder(folder);\n      this.setFolderChange(validated);\n    }\n    getFolderName(arr) {\n      if (arr.length === 0) {\n        return 'new-folder';\n      }\n      return arr.join('-');\n    }\n    onJsonMatrixSelection(row) {\n      this.filteredMatrix = this.assistant.getFilteredMatrix(this.matrix, this.matrixTitles, this.searchArray, true);\n      this.setSearchValues();\n    }\n    playSong(file) {\n      this.assistant.playSong(file, this.getFeedback());\n    }\n    getFeedback() {\n      return msg => {\n        this.feedback(msg);\n      };\n    }\n    feedback(msg) {\n      this.helper.feedback(msg);\n    }\n    static #_ = this.ɵfac = function SuggestionFilterComponent_Factory(t) {\n      return new (t || SuggestionFilterComponent)(i0.ɵɵdirectiveInject(i1.DataProcessorService), i0.ɵɵdirectiveInject(i2.HelperService), i0.ɵɵdirectiveInject(i3.FileDataService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SuggestionFilterComponent,\n      selectors: [[\"app-suggestion-filter\"]],\n      inputs: {\n        suggestionMatrix: \"suggestionMatrix\",\n        suggestionObject: \"suggestionObject\",\n        matrixTitles: \"matrixTitles\",\n        filteredMatrix: \"filteredMatrix\",\n        matrix: \"matrix\"\n      },\n      outputs: {\n        filesChange: \"filesChange\",\n        matrixChange: \"matrixChange\",\n        folderChange: \"folderChange\"\n      },\n      decls: 21,\n      vars: 13,\n      consts: [[1, \"left-menu\"], [1, \"nav\", \"flex-column\"], [1, \"nav-item\"], [1, \"small-button\", 3, \"ngClass\", \"click\"], [1, \"container-fluid\"], [1, \"jumbotron\", \"menu\"], [3, \"matrix\", \"audioData\", \"isMatrixOn\", \"isStepsOn\", \"savedAudio\"], [\"class\", \"jumbotron\", 4, \"ngIf\"], [1, \"jumbotron\"], [3, \"matrixIn\", \"columnTitlesArray\", \"isFixed\", \"ignoreColumns\", \"selectedItem\", \"tableChange\", \"searchChange\"], [2, \"position\", \"relative\", 3, \"matrix\", \"isSearch\", \"searchArray\", \"selectedItem\"]],\n      template: function SuggestionFilterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"ul\", 1)(2, \"li\", 2)(3, \"div\", 3);\n          i0.ɵɵlistener(\"click\", function SuggestionFilterComponent_Template_div_click_3_listener() {\n            return ctx.isStepsOn = !ctx.isStepsOn;\n          });\n          i0.ɵɵelementStart(4, \"mat-icon\");\n          i0.ɵɵtext(5, \"short_text\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(6, \"li\", 2)(7, \"div\", 3);\n          i0.ɵɵlistener(\"click\", function SuggestionFilterComponent_Template_div_click_7_listener() {\n            return ctx.isMatrixOn = !ctx.isMatrixOn;\n          });\n          i0.ɵɵelementStart(8, \"mat-icon\");\n          i0.ɵɵtext(9, \"notes\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(10, \"li\", 2)(11, \"div\", 3);\n          i0.ɵɵlistener(\"click\", function SuggestionFilterComponent_Template_div_click_11_listener() {\n            return ctx.isSearchOn = !ctx.isSearchOn;\n          });\n          i0.ɵɵelementStart(12, \"mat-icon\");\n          i0.ɵɵtext(13, \"search\");\n          i0.ɵɵelementEnd()()()()();\n          i0.ɵɵelementStart(14, \"div\", 4)(15, \"div\", 5)(16, \"div\")(17, \"app-tag-audio\", 6);\n          i0.ɵɵlistener(\"savedAudio\", function SuggestionFilterComponent_Template_app_tag_audio_savedAudio_17_listener($event) {\n            return ctx.onSavedAudio($event);\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(18, SuggestionFilterComponent_div_18_Template, 2, 3, \"div\", 7);\n          i0.ɵɵelementStart(19, \"div\", 8)(20, \"app-sortable-searchable-table\", 9);\n          i0.ɵɵlistener(\"selectedItem\", function SuggestionFilterComponent_Template_app_sortable_searchable_table_selectedItem_20_listener($event) {\n            return ctx.onTableSelection($event);\n          })(\"tableChange\", function SuggestionFilterComponent_Template_app_sortable_searchable_table_tableChange_20_listener($event) {\n            return ctx.onTableChange($event);\n          })(\"searchChange\", function SuggestionFilterComponent_Template_app_sortable_searchable_table_searchChange_20_listener($event) {\n            return ctx.onTableSearch($event);\n          });\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngClass\", ctx.isStepsOn ? \"small-button selected\" : \"small-button not-selected\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", ctx.isMatrixOn ? \"small-button selected\" : \"small-button not-selected\");\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", ctx.isSearchOn ? \"small-button selected\" : \"small-button not-selected\");\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"matrix\", ctx.suggestionMatrix)(\"audioData\", ctx.currentAudioArray)(\"isMatrixOn\", ctx.isMatrixOn)(\"isStepsOn\", ctx.isStepsOn);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.isSearchOn);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"matrixIn\", ctx.filteredMatrix)(\"columnTitlesArray\", ctx.matrixTitles)(\"isFixed\", false)(\"ignoreColumns\", i0.ɵɵpureFunction0(12, _c0));\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i5.MatIcon, i6.SortableSearchableTableComponent, i7.MatrixJsonComponent, i8.TagAudioComponent]\n    });\n  }\n  return SuggestionFilterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}