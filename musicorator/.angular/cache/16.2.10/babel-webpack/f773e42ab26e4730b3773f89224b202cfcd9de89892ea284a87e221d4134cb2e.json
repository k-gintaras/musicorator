{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/chips\";\nconst _c0 = function (a1, a2) {\n  return {\n    color: \"white\",\n    border: a1,\n    \"background-color\": a2,\n    \"min-height\": \"25px\",\n    \"font-size\": \"small\"\n  };\n};\nfunction MatrixJsonComponent_div_1_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-chip\", 6);\n    i0.ɵɵlistener(\"click\", function MatrixJsonComponent_div_1_div_5_Template_mat_chip_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const tag_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.tryAddValidatedWithGroup(tag_r3, ctx_r4.resultsArray, true));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tag_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(2, _c0, ctx_r2.isThisTagSelected(tag_r3.name) ? \"2px solid black\" : \"\", tag_r3.color));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tag_r3.name, \" \");\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    border: a0\n  };\n};\nfunction MatrixJsonComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"mat-chip-list\");\n    i0.ɵɵtemplate(5, MatrixJsonComponent_div_1_div_5_Template, 3, 5, \"div\", 5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c1, ctx_r0.isThisGroupSelected(row_r1) ? \"2px solid black\" : \"\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r1.title, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", row_r1.value);\n  }\n}\nexport let MatrixJsonComponent = /*#__PURE__*/(() => {\n  class MatrixJsonComponent {\n    constructor() {\n      this.resultsArray = [];\n      this.matrix = [];\n      this.isSearch = false;\n      this.searchArray = [];\n      this.selectedItem = new EventEmitter();\n    }\n    ngOnInit() {}\n    ngOnDestroy() {\n      if (this.selectedItem) {\n        this.selectedItem.unsubscribe();\n      }\n    }\n    onSelectedItem(item, selected) {\n      const updated = item;\n      updated.isSelected = selected;\n      this.selectedItem.emit(updated);\n    }\n    tryAddValidatedWithGroup(value, arr, isRemoveNonUnique) {\n      const name = value.name;\n      const unique = this.isNotIn(name, arr);\n      if (unique) {\n        if ((name || '').trim()) {\n          const clean = name.trim().toLowerCase();\n          arr.push(clean);\n          if (this.isSearch) {\n            this.setSearchArray(value.group, clean);\n          }\n          this.onSelectedItem(value, true);\n        }\n      } else {\n        if (isRemoveNonUnique) {\n          this.removeFromArr(name, arr);\n          this.onSelectedItem(value, false);\n        }\n      }\n    }\n    isThisGroupSelected(row) {\n      const name = row.title;\n      const values = row.value;\n      for (const val of values) {\n        if (val) {\n          if (val.name) {\n            if (this.isIn(val.name, this.resultsArray)) {\n              return true;\n            }\n          }\n        }\n      }\n      return false;\n    }\n    setSearchArray(groupIn, nameIn) {\n      this.searchArray.push({\n        search: nameIn,\n        column: groupIn\n      });\n    }\n    addUniqueItem(arr, item) {\n      if (arr.indexOf(item) === -1) {\n        arr.push(item);\n      }\n    }\n    removeFromArr(tag, arr) {\n      const index = arr.indexOf(tag);\n      if (index > -1) {\n        arr.splice(index, 1);\n        if (this.isSearch) {\n          // this.searchArray = this.searchArray.filter((item) => {\n          //   return item.search !== tag;\n          // }); // doesn't trigger change detection we need here\n          this.searchArray.splice(this.searchArray.findIndex(e => e.search === tag), 1);\n        }\n      }\n    }\n    isNotIn(val, arr) {\n      return !(arr.indexOf(val) > -1);\n    }\n    isIn(val, arr) {\n      return arr.indexOf(val) > -1;\n    }\n    isThisTagSelected(tag) {\n      return this.isIn(tag, this.resultsArray);\n    }\n    static #_ = this.ɵfac = function MatrixJsonComponent_Factory(t) {\n      return new (t || MatrixJsonComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MatrixJsonComponent,\n      selectors: [[\"app-matrix-json\"]],\n      inputs: {\n        resultsArray: \"resultsArray\",\n        matrix: \"matrix\",\n        isSearch: \"isSearch\",\n        searchArray: \"searchArray\"\n      },\n      outputs: {\n        selectedItem: \"selectedItem\"\n      },\n      decls: 2,\n      vars: 1,\n      consts: [[1, \"container\", \"unselectable\"], [\"class\", \"row tight-row\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"tight-row\"], [1, \"col-2\", 3, \"ngStyle\"], [1, \"col-10\"], [4, \"ngFor\", \"ngForOf\"], [2, \"color\", \"white\", 3, \"ngStyle\", \"click\"]],\n      template: function MatrixJsonComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, MatrixJsonComponent_div_1_Template, 6, 5, \"div\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngForOf\", ctx.matrix);\n        }\n      },\n      dependencies: [i1.NgForOf, i1.NgStyle, i2.MatChip]\n    });\n  }\n  return MatrixJsonComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}