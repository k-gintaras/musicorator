{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/material/chips\";\nimport * as i4 from \"@angular/material/icon\";\nimport * as i5 from \"@angular/material/button\";\nconst _c0 = function (a1) {\n  return {\n    color: \"white\",\n    border: a1,\n    \"background-color\": \"grey\",\n    \"min-height\": \"20px\",\n    \"font-size\": \"small\",\n    margin: \"1px\",\n    padding: \"4px\"\n  };\n};\nfunction SortableSearchableTableComponent_div_2_mat_chip_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip\", 16);\n    i0.ɵɵlistener(\"click\", function SortableSearchableTableComponent_div_2_mat_chip_6_Template_mat_chip_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r10);\n      const item_r8 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r9.ignoreColumn(item_r8));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r8 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c0, ctx_r6.isThisIgnored(item_r8) ? \"2px solid black\" : \"\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r8, \" \");\n  }\n}\nfunction SortableSearchableTableComponent_div_2_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"pre\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r7.getCsv());\n  }\n}\nfunction SortableSearchableTableComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8)(1, \"div\", 9)(2, \"div\", 10)(3, \"div\", 11);\n    i0.ɵɵtext(4, \"Ignore Columns:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-chip-list\");\n    i0.ɵɵtemplate(6, SortableSearchableTableComponent_div_2_mat_chip_6_Template, 2, 4, \"mat-chip\", 12);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 13)(8, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function SortableSearchableTableComponent_div_2_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.isShowCsv = !ctx_r11.isShowCsv);\n    });\n    i0.ɵɵtext(9, \" Show CSV \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(10, SortableSearchableTableComponent_div_2_div_10_Template, 3, 1, \"div\", 15);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.columnTitlesArray);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isShowCsv);\n  }\n}\nfunction SortableSearchableTableComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"unfold_more\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction SortableSearchableTableComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"unfold_less\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction SortableSearchableTableComponent_ng_container_15_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\")(1, \"input\", 17);\n    i0.ɵɵlistener(\"ngModelChange\", function SortableSearchableTableComponent_ng_container_15_th_1_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const item_r13 = i0.ɵɵnextContext().$implicit;\n      return i0.ɵɵresetView(item_r13.search = $event);\n    })(\"ngModelChange\", function SortableSearchableTableComponent_ng_container_15_th_1_Template_input_ngModelChange_1_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r19.setFilter());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r13 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", item_r13.column === \"tags\" ? \"tag,tag\" : item_r13.column);\n    i0.ɵɵproperty(\"ngModel\", item_r13.search);\n  }\n}\nfunction SortableSearchableTableComponent_ng_container_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, SortableSearchableTableComponent_ng_container_15_th_1_Template, 2, 2, \"th\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const i_r14 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.canShowColumn(i_r14));\n  }\n}\nfunction SortableSearchableTableComponent_ng_container_22_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\")(1, \"div\", 18);\n    i0.ɵɵlistener(\"click\", function SortableSearchableTableComponent_ng_container_22_th_1_Template_div_click_1_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const item_r21 = i0.ɵɵnextContext().$implicit;\n      const ctx_r24 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r24.sortData(item_r21));\n    });\n    i0.ɵɵelementStart(2, \"b\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r21 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(item_r21);\n  }\n}\nfunction SortableSearchableTableComponent_ng_container_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, SortableSearchableTableComponent_ng_container_22_th_1_Template, 4, 1, \"th\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const i_r22 = ctx.index;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.canShowColumn(i_r22));\n  }\n}\nfunction SortableSearchableTableComponent_tr_24_ng_container_9_td_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r31 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r31, \" \");\n  }\n}\nfunction SortableSearchableTableComponent_tr_24_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, SortableSearchableTableComponent_tr_24_ng_container_9_td_1_Template, 2, 1, \"td\", 20);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const i_r32 = ctx.index;\n    const ctx_r30 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r30.canShowColumn(i_r32));\n  }\n}\nfunction SortableSearchableTableComponent_tr_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r36 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"div\", 5);\n    i0.ɵɵlistener(\"click\", function SortableSearchableTableComponent_tr_24_Template_div_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r36);\n      const row_r28 = restoredCtx.$implicit;\n      const ctx_r35 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r35.remove(row_r28));\n    });\n    i0.ɵɵelementStart(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"remove\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(5, \"td\")(6, \"div\", 19);\n    i0.ɵɵlistener(\"click\", function SortableSearchableTableComponent_tr_24_Template_div_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r36);\n      const row_r28 = restoredCtx.$implicit;\n      const ctx_r37 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r37.onSelectedRow(row_r28));\n    });\n    i0.ɵɵelementStart(7, \"mat-icon\");\n    i0.ɵɵtext(8, \"add\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(9, SortableSearchableTableComponent_tr_24_ng_container_9_Template, 2, 1, \"ng-container\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r28 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", ctx_r5.currentTitle === row_r28[0] ? \"clickable-text selected\" : \"clickable-text not-selected\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", row_r28);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"table-layout\": a0\n  };\n};\nexport var KEY_CODE = /*#__PURE__*/function (KEY_CODE) {\n  KEY_CODE[\"RIGHT_ARROW\"] = \"ArrowRight\";\n  KEY_CODE[\"LEFT_ARROW\"] = \"ArrowLeft\";\n  KEY_CODE[\"LEFT_BRACKET\"] = \"[\";\n  KEY_CODE[\"RIGHT_BRACKET\"] = \"]\";\n  return KEY_CODE;\n}(KEY_CODE || {});\nexport let SortableSearchableTableComponent = /*#__PURE__*/(() => {\n  class SortableSearchableTableComponent {\n    constructor() {\n      this.selectedItem = new EventEmitter();\n      this.tableChange = new EventEmitter();\n      this.searchChange = new EventEmitter();\n      this.searchStringsArray = [];\n      this.columnTitlesArray = [];\n      this.ignoreColumns = [];\n      this.matrixIn = [];\n      this.matrixOut = [];\n      this.currentTitle = '';\n      this.lessThan = false;\n      this.isAscending = false;\n      this.isFixed = false;\n      this.isMenuOpen = false;\n      this.isShowCsv = false;\n      this.currentSelectedPosition = 0;\n      this.TABLE_EXTRA_VALUE_SPLITTER = ' ';\n    }\n    ngOnInit() {\n      this.reset();\n    }\n    ngOnDestroy() {\n      if (this.selectedItem) {\n        this.selectedItem.unsubscribe();\n      }\n      if (this.tableChange) {\n        this.tableChange.unsubscribe();\n      }\n      if (this.searchChange) {\n        this.searchChange.unsubscribe();\n      }\n    }\n    // TODO: wrong on click\n    ngOnChanges(changes) {\n      if (changes.matrixIn) {\n        if (changes.matrixIn.currentValue !== changes.matrixIn.previousValue) {\n          this.reset();\n          this.onDataChange();\n        }\n      }\n    }\n    keyEvent(event) {\n      if (event.key === KEY_CODE.RIGHT_BRACKET) {\n        this.next();\n      }\n      if (event.key === KEY_CODE.LEFT_BRACKET) {\n        this.previous();\n      }\n    }\n    previous() {\n      this.setNextOrPreviousTrack(-1);\n    }\n    next() {\n      this.setNextOrPreviousTrack(1);\n    }\n    setNextOrPreviousTrack(next) {\n      this.setValidatedPosition(next);\n      const currentSelection = this.matrixOut[this.currentSelectedPosition];\n      this.setCurrentSelection(currentSelection);\n    }\n    setCurrentSelection(item) {\n      if (item) {\n        this.onSelectedRow(item);\n      }\n    }\n    setValidatedPosition(next) {\n      this.currentSelectedPosition += next;\n      if (this.currentSelectedPosition < 0) {\n        this.currentSelectedPosition = this.matrixOut.length - 1;\n      }\n      if (this.currentSelectedPosition > this.matrixOut.length - 1) {\n        this.currentSelectedPosition = 0;\n      }\n    }\n    getCsv() {\n      let str = this.columnTitlesArray.join(',') + '\\n';\n      for (const row of this.matrixOut) {\n        str += row.join(',') + '\\n';\n      }\n      return str;\n    }\n    canShowColumn(i) {\n      for (const ignore of this.ignoreColumns) {\n        const index = this.columnTitlesArray.indexOf(ignore);\n        if (index === i) {\n          return false;\n        }\n      }\n      return true;\n    }\n    isThisIgnored(name) {\n      return this.isInArray(name, this.ignoreColumns);\n    }\n    ignoreColumn(name) {\n      this.tryAddValidatedWithGroup(name, this.ignoreColumns, true, false);\n    }\n    tryAddValidatedWithGroup(value, arr, isRemoveNonUnique, toLowerCase) {\n      const name = value;\n      const unique = this.isNotIn(name, arr);\n      if (unique) {\n        if ((name || '').trim()) {\n          let clean = name.trim();\n          if (toLowerCase) {\n            clean = clean.toLowerCase();\n          }\n          arr.push(clean);\n        }\n      } else {\n        if (isRemoveNonUnique) {\n          this.removeFromArr(name, arr);\n        }\n      }\n    }\n    removeFromArr(tag, arr) {\n      const index = arr.indexOf(tag);\n      if (index > -1) {\n        arr.splice(index, 1);\n      }\n    }\n    // only add if unique\n    isNotIn(val, arr) {\n      return !(arr.indexOf(val) > -1);\n    }\n    isInArray(value, array) {\n      return array.indexOf(value) > -1;\n    }\n    reset() {\n      this.searchStringsArray = [];\n      for (const col of this.columnTitlesArray) {\n        this.searchStringsArray.push({\n          column: col,\n          search: ''\n        });\n      }\n      this.matrixOut = this.getArrayCopy(this.matrixIn); // this.matrixIn;\n    }\n\n    getArrayCopy(arr) {\n      return Object.assign([], arr);\n    }\n    onSelectedRow(item) {\n      this.currentTitle = item[0];\n      for (let i = 0; i < this.matrixOut.length; i++) {\n        const val = this.matrixOut[i];\n        const title = val[0];\n        if (title === this.currentTitle) {\n          this.currentSelectedPosition = i;\n        }\n      }\n      this.selectedItem.emit(item);\n    }\n    onDataChange() {\n      this.tableChange.emit(this.matrixOut);\n    }\n    onSearchFilter() {\n      this.searchChange.emit(this.searchStringsArray);\n    }\n    sortData(sort) {\n      this.matrixOut.sort((a, b) => {\n        for (let i = 0; i < this.columnTitlesArray.length; i++) {\n          const title = this.columnTitlesArray[i];\n          if (sort === title) {\n            return this.compare(a[i], b[i], this.isAscending);\n          }\n        }\n        return 0;\n      });\n      this.isAscending = !this.isAscending;\n      this.onDataChange();\n    }\n    remove(row) {\n      this.matrixOut = this.matrixOut.filter(res => {\n        if (row[0] && res[0]) {\n          return row[0] !== res[0];\n        } else {\n          return true;\n        }\n      });\n      this.onDataChange();\n    }\n    compare(a, b, isAsc) {\n      return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n    }\n    setFilter() {\n      this.matrixOut = this.matrixIn.filter(item => {\n        for (let i = 0; i < this.searchStringsArray.length; i++) {\n          const val = this.searchStringsArray[i];\n          const searchColumn = val.column;\n          const b = val.search;\n          if (b) {\n            const a = item[i];\n            const match = this.isMatch(a, b);\n            if (b.split(this.TABLE_EXTRA_VALUE_SPLITTER) > 0) {\n              if (a) {\n                const tags = b.split(this.TABLE_EXTRA_VALUE_SPLITTER);\n                for (const tag of tags) {\n                  const matchTag = this.isMatch(a, tag);\n                  if (!matchTag) {\n                    return false;\n                  }\n                }\n              }\n            } else {\n              if (!match) {\n                return false;\n              }\n            }\n          }\n        }\n        return true;\n      });\n      this.onSearchFilter();\n      this.onDataChange();\n    }\n    clearSearch() {\n      for (const val of this.searchStringsArray) {\n        val.search = '';\n      }\n      this.setFilter();\n    }\n    isMatch(a, b) {\n      if (!isNaN(a)) {\n        const bParsed = this.getParsedIntSimple(b, 0);\n        if (this.lessThan) {\n          return a < bParsed;\n        } else {\n          return bParsed < a;\n        }\n      }\n      return a.toLowerCase().indexOf(b + ''.toLowerCase()) > -1;\n    }\n    getParsedIntSimple(x, badReturn) {\n      const base = 10;\n      const parsed = parseInt(x, base);\n      if (isNaN(parsed)) {\n        return badReturn;\n      }\n      return parsed;\n    }\n    static #_ = this.ɵfac = function SortableSearchableTableComponent_Factory(t) {\n      return new (t || SortableSearchableTableComponent)();\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SortableSearchableTableComponent,\n      selectors: [[\"app-sortable-searchable-table\"]],\n      hostBindings: function SortableSearchableTableComponent_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keyup\", function SortableSearchableTableComponent_keyup_HostBindingHandler($event) {\n            return ctx.keyEvent($event);\n          }, false, i0.ɵɵresolveWindow);\n        }\n      },\n      inputs: {\n        searchStringsArray: \"searchStringsArray\",\n        columnTitlesArray: \"columnTitlesArray\",\n        ignoreColumns: \"ignoreColumns\",\n        matrixIn: \"matrixIn\",\n        matrixOut: \"matrixOut\",\n        isFixed: \"isFixed\"\n      },\n      outputs: {\n        selectedItem: \"selectedItem\",\n        tableChange: \"tableChange\",\n        searchChange: \"searchChange\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature],\n      decls: 25,\n      vars: 9,\n      consts: [[1, \"clickable-text\", \"unselectable\", 2, \"background-color\", \"white\", \"padding-left\", \"5px\", 3, \"click\"], [\"style\", \"background-color: white; padding-left: 5px\", 4, \"ngIf\"], [1, \"table-dark\", \"table\", 2, \"position\", \"relative\"], [1, \"table\", \"table-striped\", \"table-dark\", 3, \"ngStyle\"], [1, \"thead-light\"], [1, \"small-button\", 3, \"click\"], [4, \"ngIf\"], [4, \"ngFor\", \"ngForOf\"], [2, \"background-color\", \"white\", \"padding-left\", \"5px\"], [1, \"container-fluid\"], [1, \"row\", \"unselectable\", 2, \"padding\", \"4px\"], [2, \"margin-right\", \"10px\"], [3, \"ngStyle\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [\"mat-raised-button\", \"\", 3, \"click\"], [\"class\", \"row\", 4, \"ngIf\"], [3, \"ngStyle\", \"click\"], [\"type\", \"text\", \"name\", \"searchString\", 2, \"width\", \"80px\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [1, \"clickable-text\", 2, \"cursor\", \"pointer\", 3, \"click\"], [1, \"small-button\", 3, \"ngClass\", \"click\"], [\"class\", \"dont-break-out\", 4, \"ngIf\"], [1, \"dont-break-out\"]],\n      template: function SortableSearchableTableComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵlistener(\"click\", function SortableSearchableTableComponent_Template_div_click_0_listener() {\n            return ctx.isMenuOpen = !ctx.isMenuOpen;\n          });\n          i0.ɵɵtext(1, \" Table Menu\\n\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(2, SortableSearchableTableComponent_div_2_Template, 11, 2, \"div\", 1);\n          i0.ɵɵelementStart(3, \"div\", 2)(4, \"table\", 3)(5, \"thead\", 4)(6, \"tr\")(7, \"th\")(8, \"div\", 5);\n          i0.ɵɵlistener(\"click\", function SortableSearchableTableComponent_Template_div_click_8_listener() {\n            ctx.lessThan = !ctx.lessThan;\n            return ctx.setFilter();\n          });\n          i0.ɵɵtemplate(9, SortableSearchableTableComponent_div_9_Template, 3, 0, \"div\", 6);\n          i0.ɵɵtemplate(10, SortableSearchableTableComponent_div_10_Template, 3, 0, \"div\", 6);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"th\")(12, \"div\", 5);\n          i0.ɵɵlistener(\"click\", function SortableSearchableTableComponent_Template_div_click_12_listener() {\n            return ctx.clearSearch();\n          });\n          i0.ɵɵelementStart(13, \"mat-icon\");\n          i0.ɵɵtext(14, \"clear\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(15, SortableSearchableTableComponent_ng_container_15_Template, 2, 1, \"ng-container\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(16, \"thead\", 4)(17, \"tr\")(18, \"th\");\n          i0.ɵɵtext(19, \"Clear\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"th\");\n          i0.ɵɵtext(21, \"Info\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(22, SortableSearchableTableComponent_ng_container_22_Template, 2, 1, \"ng-container\", 7);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(23, \"tbody\");\n          i0.ɵɵtemplate(24, SortableSearchableTableComponent_tr_24_Template, 10, 2, \"tr\", 7);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.isMenuOpen);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(7, _c1, ctx.isFixed ? \"fixed\" : \"auto\"));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.lessThan);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.lessThan);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngForOf\", ctx.searchStringsArray);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngForOf\", ctx.columnTitlesArray);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.matrixOut);\n        }\n      },\n      dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgStyle, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i3.MatChip, i4.MatIcon, i5.MatButton]\n    });\n  }\n  return SortableSearchableTableComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}