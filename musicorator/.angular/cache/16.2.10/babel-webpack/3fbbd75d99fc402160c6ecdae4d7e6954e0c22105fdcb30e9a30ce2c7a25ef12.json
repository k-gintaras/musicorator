{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { throttleTime } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let AntiSpamClickDirective = /*#__PURE__*/(() => {\n  class AntiSpamClickDirective {\n    constructor() {\n      this.debounceTime = 500;\n      this.debounceClick = new EventEmitter();\n      this.clicks = new Subject();\n    }\n    ngOnInit() {\n      this.subscription = this.clicks.pipe(throttleTime(this.debounceTime, undefined, {\n        leading: true,\n        trailing: true\n      })).subscribe(e => this.debounceClick.emit(e));\n    }\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n    clickEvent(event) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.clicks.next(event);\n    }\n    static #_ = this.ɵfac = function AntiSpamClickDirective_Factory(t) {\n      return new (t || AntiSpamClickDirective)();\n    };\n    static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n      type: AntiSpamClickDirective,\n      selectors: [[\"\", \"appAntiSpamClick\", \"\"]],\n      hostBindings: function AntiSpamClickDirective_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"click\", function AntiSpamClickDirective_click_HostBindingHandler($event) {\n            return ctx.clickEvent($event);\n          });\n        }\n      },\n      inputs: {\n        debounceTime: \"debounceTime\"\n      },\n      outputs: {\n        debounceClick: \"debounceClick\"\n      }\n    });\n  }\n  return AntiSpamClickDirective;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}