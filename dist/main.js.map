{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/electron-communicator.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ElectronCommunicatorService } from './electron-communicator.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  constructor(private communicator: ElectronCommunicatorService) {}\n  listeners: Subscription[] = [];\n  title = 'app-name';\n  @Input() folder = 'C:/Users/Guest/Desktop';\n  files = [];\n\n  ngOnInit(): void {\n    // TODO: must push so you can unsubscribe or will be problematic when navigating\n\n    this.listeners = [];\n    this.listeners.push(this.getFilesListener());\n    this.listeners.push(this.getFeedbackListener());\n  }\n\n  ngOnDestroy(): void {\n    // TODO: must unsubscribe or will be problematic when navigating\n    for (const l of this.listeners) {\n      if (l) {\n        l.unsubscribe();\n      }\n    }\n  }\n\n  // TODO: ask electron to do something\n  getFiles(): void {\n    const options = {\n      key: 'getFilesByType',\n      dir: this.folder,\n      type: 'txt',\n    };\n    this.communicator.sendToElectron(options);\n  }\n\n  // TODO: wait for electron to respond\n  getFilesListener(): Subscription {\n    return this.communicator\n      .listenToElectronConstantly('getFilesByType')\n      .subscribe((result) => {\n        console.log(result);\n        this.files = result;\n      });\n  }\n\n  getFeedbackListener(): Subscription {\n    return this.communicator\n      .listenToElectronConstantly('getFeedback')\n      .subscribe((result) => {\n        console.log(result);\n      });\n  }\n}\n","<input [(ngModel)]=\"folder\" placeholder=\"folder/to/open\" />\n<button (click)=\"getFiles()\">Show Txt Files</button>\n<div *ngFor=\"let file of files\">\n  <div>{{ file }}</div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [BrowserModule, AppRoutingModule, FormsModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable, NgZone } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ElectronCommunicatorService {\n  ipc;\n  messages = new BehaviorSubject<string>('');\n  directory = new BehaviorSubject<string>('');\n\n  // TODO: look into app component, this is not necessary to edit\n  constructor(private zone: NgZone) {\n    if ((window as any).require) {\n      try {\n        this.ipc = (window as any).require('electron').ipcRenderer;\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      console.log('Could not load electron ipc');\n    }\n  }\n\n  sendToElectron(options: any): void {\n    if (this.ipc) {\n      this.sendElectron(options);\n    } else {\n      this.sendAngular(options);\n    }\n  }\n\n  listenToElectronConstantly(key: string): Observable<any> {\n    if (this.ipc) {\n      return this.listenElectron(key);\n    } else {\n      return this.listenAngular(key);\n    }\n  }\n\n  private sendElectron(options: any): void {\n    // TODO: this request is listened in electron app\n    this.ipc.send('requestFromRenderer', options);\n  }\n\n  private sendAngular(options: any): void {\n    console.log('sending to electron: ' + options.key);\n  }\n\n  private listenElectron(key: string): Observable<any> {\n    const observable = new Observable((subscriber) => {\n      try {\n        this.ipc.on(key, (event: any, arg: any) => {\n          this.zone.run(() => {\n            subscriber.next(arg);\n            // subscriber.complete(); if you want to stop from listening next values\n          });\n        });\n      } catch (error) {\n        this.feedback('Electron Communicator Error: ' + error);\n        subscriber.next('listenToElectronConstantly Error: ' + key);\n        subscriber.complete();\n      }\n    });\n    return observable;\n  }\n\n  private listenAngular(key: string): Observable<any> {\n    // TODO: return reasonable values when running ng serve\n    const observable = new Observable((subscriber) => {\n      try {\n        switch (key) {\n          case 'openDirectory':\n            subscriber.next('C:/Users');\n            break;\n          case 'getFilesByType':\n            subscriber.next('testdata');\n            break;\n          default:\n            break;\n        }\n      } catch (error) {\n        this.feedback('Electron Communicator Error: ' + error);\n        subscriber.next('listenToElectronConstantly Error: ' + key);\n        subscriber.complete();\n      }\n    });\n    return observable;\n  }\n\n  getFileName(dir: string): string {\n    if (dir) {\n      return dir.replace(/^.*[\\\\\\/]/, '');\n    }\n    return dir;\n  }\n\n  feedback(s: string): void {\n    // TODO: feedback to user\n    console.log(s);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}